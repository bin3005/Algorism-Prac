import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class BinarySearch10815 {
	static ArrayList<Integer> card = new ArrayList<Integer>();
	static ArrayList<Integer> find = new ArrayList<Integer>();
	static ArrayList<Integer> result = new ArrayList<Integer>();
	
	public static boolean search(int i) {
		int start = 0;
		int mid = 0;
		int end = card.size()-1;
		while(start <= end) {
			mid = start + end;			
			
			if(card.get(mid)== find.get(i)) {
				return true;
			}else if(card.get(mid) > find.get(i)) {
				end = mid -1;
			}else{
				start = mid +1;
			}
			
			
		}
		
		return false;
	}
	
	public static void main(String[] args) {
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		
		try {
			int num1 = in.read();
			
			for(int i = 0; i < num1 ; i++) {
				card.add(in.read());
			}
			
			int num2 = in.read();;
			for(int i = 0; i < num2 ; i++) {
				find.add(in.read());
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Collections.sort(card);
		
		
		for(int i = 0 ; i < find.size(); i++) {
			if( search(i) ) {
				result.add(1);
			}else {
				result.add(0);
			}
		}
		System.out.println(result);
	}
	
	

}
