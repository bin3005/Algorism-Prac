import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import java.util.StringTokenizer;

public class Greedy1202 {

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		Scanner in = new Scanner(System.in);
		int cubeNum = Integer.parseInt(br.readLine());
		int bagNum = Integer.parseInt(br.readLine());
		ArrayList<Cube> cubeList = new ArrayList<>();
		ArrayList<Integer> bagList = new ArrayList<Integer>();
		int sum = 0 ;
		
		
		for(int i = 0 ; i < cubeNum ; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			cubeList.add(new Cube(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken())));
		}
		for(int i = 0 ; i < bagNum ; i++) {
			bagList.add(Integer.parseInt(br.readLine()));
		}
		Collections.sort(cubeList);
		Collections.sort(bagList);
		
		while(bagList.size() >= 1 && cubeList.size() >=1) {
			
			for(int i = 0 ; i < bagList.size();i ++) {
				if(bagList.get(i) >= cubeList.get(0).weight) {
					sum += cubeList.get(0).price;
					cubeList.remove(i);
					bagList.remove(i);
					break;
				}
			}
		}
		
		System.out.println(sum);
	}

}

class Cube implements Comparable<Cube>{
	int weight;
	int price;
	public Cube() {
		super();
	}
	public Cube(int weight, int price) {
		super();
		this.weight = weight;
		this.price = price;
	}
	@Override
	public int compareTo(Cube cube) {

		if(price < cube.price) {
			return 1;
		}else {
			return -1;
		}
	}
	@Override
	public String toString() {
		return "Cube [weight=" + weight + ", price=" + price + "]";
	}
	
	
	
	
	
}
