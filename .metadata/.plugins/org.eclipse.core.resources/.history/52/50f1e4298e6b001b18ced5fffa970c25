import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import java.util.StringTokenizer;

public class Greedy1202 {

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		Scanner in = new Scanner(System.in);
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		int cubeNum = Integer.parseInt(st.nextToken());
		int bagNum = Integer.parseInt(st.nextToken());
		ArrayList<Cube> cubeList = new ArrayList<>();
		ArrayList<Integer> bagList = new ArrayList<Integer>();
		int sum = 0 ;
		
		
		for(int i = 0 ; i < cubeNum ; i++) {
			st = new StringTokenizer(br.readLine());
			cubeList.add(new Cube(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken())));
		}
		for(int i = 0 ; i < bagNum ; i++) {
			bagList.add(Integer.parseInt(br.readLine()));
		}
		
		Collections.sort(cubeList);
		Collections.sort(bagList);
		int cubeIndex = 0;
		while(bagList.size() >= 1 && cubeList.size() >=1) {
			
			int index = lower_bound(bagList, cubeList.get(cubeIndex).weight);
			sum += cubeList.get(index).price;
			cubeList.remove(cubeIndex);
			bagList.remove(index);
			
			
		}
		System.out.println(sum);
	}
	
	public static int lower_bound(ArrayList<Integer> list, int weight) {
		
		int left = 0;
		int right = list.size()-1;
		int mid = 0;
		
		while(left < right) {
			mid = (left+right)/2;
			if(list.get(mid) >= weight) {
				right = mid;
			}else {
				left = mid+1;
			}
		}
		
		
		return right;
	}
	
}

class Cube implements Comparable<Cube>{
	int weight;
	int price;
	public Cube() {
		super();
	}
	public Cube(int weight, int price) {
		super();
		this.weight = weight;
		this.price = price;
	}
	@Override
	public int compareTo(Cube cube) {

		if(price < cube.price) {
			return 1;
		}else if(price == cube.price) {
			if(weight < cube.weight) {
				return -1;
			}else {
				return 1;
			}
		}
		else {
			return -1;
		}
	}
	@Override
	public String toString() {
		return "Cube [weight=" + weight + ", price=" + price + "]";
	}
	
	
	
	
	
}
